plugins {
    id "com.android.application"
    id "kotlin-android"
    id "org.jetbrains.kotlin.kapt"
    id "org.jetbrains.kotlin.plugin.serialization"
    id "kotlin-allopen"
    id "androidx.navigation.safeargs.kotlin"
    id "com.github.triplet.play"
    id "com.github.breadmoirai.github-release"
    id "com.mikepenz.aboutlibraries.plugin"
    id "kotlin-parcelize"
}

repositories {
    maven { url "https://jitpack.io" }
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    def schemasLocation = "$projectDir/schemas"

    defaultConfig {
        // Using legacy package name 'com.maltaisn.notes.sync' which was used at the time where
        // there was a sync flavor. Package can't be changed on Play Store so it was kept.
        applicationId "com.maltaisn.notes.sync"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 10401
        versionName "1.4.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        kapt {
            arguments {
                arg("room.schemaLocation", schemasLocation)
            }
        }

        // prevent half-translated app, for example if recurpickerlib is available is one language,
        // but the app is not, then the app should show entirely in one language.
        // REMOVED: prevents layout from showing in RTL direction
//        resConfigs "en", "fr", "nb", "es"
    }

    buildFeatures {
        viewBinding = true
    }

    sourceSets {
        // This just add "kotlin" folder to source sets since the default is "java".
        main {
            java.srcDirs += "src/main/kotlin"
        }

        debug {
            java.srcDirs += "src/debug/kotlin"
        }
        release {
            java.srcDirs += "src/release/kotlin"
        }

        // All test source sets have a shared source set.
        def sharedTestDir = "src/sharedTest/kotlin"
        test {
            java.srcDirs += [sharedTestDir, "src/test/kotlin"]
        }
        androidTest {
            java.srcDirs += [sharedTestDir, "src/androidTest/kotlin"]
            assets.srcDirs += files(schemasLocation)
        }
    }

    signingConfigs {
        release {
            if (project.hasProperty("releaseKeyStoreFile")) {
                storeFile file(releaseKeyStoreFile)
                storePassword releaseKeyStorePassword
                keyAlias releaseKeyStoreKey
                keyPassword releaseKeyStoreKeyPassword
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            // enable debug features only if not taking screenshots
            // androidTest can seemingly only be run in debug mode, hence why it's needed.
            def takingScreenshots = System.getenv("taking_screenshots")
            buildConfigField "boolean", "ENABLE_DEBUG_FEATURES",
                    takingScreenshots == null ? "true" : (!takingScreenshots.toBoolean()).toString()
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
            buildConfigField "boolean", "ENABLE_DEBUG_FEATURES", "false"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += [
                "-Xopt-in=kotlin.ExperimentalStdlibApi",
                "-Xopt-in=kotlin.time.ExperimentalTime",
                "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
                "-Xopt-in=kotlinx.coroutines.FlowPreview",
                "-Xopt-in=kotlinx.serialization.ExperimentalSerializationApi",
        ]
    }
}

dependencies {
    // App dependencies
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.preference:preference-ktx:$preferenceVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "com.maltaisn:recurpicker:$recurpickerVersion"
    implementation "com.mikepenz:aboutlibraries:$aboutLibrariesVersion"
    implementation "com.mikepenz:aboutlibraries-core:$aboutLibrariesVersion"
    implementation 'com.github.rtugeek:colorseekbar:2.0.3'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$serializationVersion"

    // Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    compileOnly "com.squareup.inject:assisted-inject-annotations-dagger2:$assistedInjectVersion"
    kapt "com.squareup.inject:assisted-inject-processor-dagger2:$assistedInjectVersion"

    // Architecture components
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycleVersion"

    // Navigation component
    implementation "androidx.navigation:navigation-ui-ktx:$navVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navVersion"

    // Debug
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    debugImplementation "com.github.YarikSOffice.Venom:venom:$venomVersion"
    releaseImplementation "com.github.YarikSOffice.Venom:venom-no-op:$venomVersion"

    // Dependencies for local unit tests
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$kotlinMockitoVersion"
    testImplementation "androidx.arch.core:core-testing:$androidxArchTestingVersion"
    testImplementation "androidx.test:core:$androidxTestCoreVersion"
    testImplementation "androidx.test:core-ktx:$androidxTestCoreKtxVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidxTestExtVersion"
    testImplementation "androidx.test:rules:$androidxTestRulesVersion"

    // Dependencies for android tests
    androidTestImplementation "androidx.test:runner:$androidxTestRunnerVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidxTestExtVersion"
    androidTestImplementation "androidx.test:core-ktx:$androidxTestCoreKtxVersion"
    androidTestImplementation "androidx.test:rules:$androidxTestRulesVersion"
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    androidTestImplementation "org.mockito:mockito-android:$mockitoAndroidVersion"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$kotlinMockitoVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    // For screenshots
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.4.0"
}

configurations.all {
    resolutionStrategy {
        // Fixes https://github.com/Kotlin/kotlinx.coroutines/issues/2023 bug
        // preventing android test compilation since kotlin coroutines 1.3.6.
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
    }
}

tasks.getByName("build") {
    // don't test, don't lint, don't run detekt for build task.
    setDependsOn(getDependsOn().findAll { it != "check" })
}

allOpen {
    annotation "com.maltaisn.notes.OpenClass"
}

play {
    serviceAccountCredentials = file("fake-key.json")
}
if (file("publishing.gradle").exists()) {
    apply from: "publishing.gradle"
}

task takeScreenshots(type: Exec) {
    commandLine "./screenshots.sh"
}